from django.test import TestCase, Client
from django.urls import reverse
from api.models import User, Subject, Assignment
import json
from unittest.mock import patch

class LLMIntegrationTests(TestCase):
    def setUp(self):
        self.client = Client()
        self.user = User.objects.create(
            name="Test User",
            email="test@example.com",
            password="testpass123",
            role="student"
        )
        self.subject = Subject.objects.create(
            name="Mathematics",
            description="Mathematics subject"
        )

    @patch('api.utils.llm_utils.generate_assignment_questions')
    def test_generate_custom_assignment_with_llm(self, mock_generate):
        """Test custom assignment generation using LLM"""
        # Mock the LLM response
        mock_generate.return_value = {
            "title": "Test Assignment",
            "description": "Generated by LLM",
            "questions": {
                "q1": "What is 2+2?",
                "q2": "What is 3Ã—3?"
            }
        }

        data = {
            "topic": "Algebra",
            "subject": "Mathematics",
            "student_email": "test@example.com"
        }
        response = self.client.post(
            '/api/generate-custom-assignment/',
            data=json.dumps(data),
            content_type='application/json'
        )
        self.assertEqual(response.status_code, 200)
        
        # Verify that an assignment was created
        assignment = Assignment.objects.last()
        self.assertEqual(assignment.subject, self.subject)
        self.assertEqual(assignment.topic, "Algebra")

    def test_generate_custom_assignment_invalid_input(self):
        """Test custom assignment generation with invalid input"""
        # Missing required fields
        data = {
            "topic": "Algebra",
            # Missing subject and email
        }
        response = self.client.post(
            '/api/generate-custom-assignment/',
            data=json.dumps(data),
            content_type='application/json'
        )
        self.assertEqual(response.status_code, 400)

        # Invalid subject
        data = {
            "topic": "Algebra",
            "subject": "InvalidSubject",
            "student_email": "test@example.com"
        }
        response = self.client.post(
            '/api/generate-custom-assignment/',
            data=json.dumps(data),
            content_type='application/json'
        )
        self.assertEqual(response.status_code, 400)
